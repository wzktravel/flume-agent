# name the components on this agent
a1.sources = r1
a1.sinks = hdfs-sink
a1.channels = hdfs-channel

# define interceptor
a1.sources.r1.interceptors = i1
a1.sources.r1.interceptors.i1.type = com.firstshare.flume.interceptor.HDFSInterceptor$Builder
a1.sources.r1.interceptors.i1.hdfsinterceptor.switch = true

# describe/configure the source
a1.sources.r1.type = com.firstshare.flume.source.SpoolDirectoryHourlySource
a1.sources.r1.logDir = /data/appStatLog
a1.sources.r1.spoolDir = /data/appStatLog/flume
a1.sources.r1.filePrefix = fs-app-center-web-
a1.sources.r1.fileSuffix = .tmp
a1.sources.r1.ignorePattern = ^(.)*\\.tmp$
a1.sources.r1.rollMinutes = 1
a1.sources.r1.deletePolicy = immediate
a1.sources.r1.basenameHeader = true
a1.sources.r1.basenameHeaderKey = file

# hdfs sink
a1.sinks.hdfs-sink.type = hdfs
# hdfs路径规则:  /facishare-data/产品线/模块/子模块/$year/$month/$day/$filename.$host.lzo
a1.sinks.hdfs-sink.hdfs.path = /facishare-data/app/center/web/%{year}/%{month}/%{day}/
a1.sinks.hdfs-sink.hdfs.filePrefix = %{filename}.%{host}
a1.sinks.hdfs-sink.hdfs.fileSuffix = .lzo
a1.sinks.hdfs-sink.hdfs.fileType = CompressedStream
a1.sinks.hdfs-sink.hdfs.codeC = com.hadoop.compression.lzo.LzopCodec

# roll -> close current file and create a new one
# Number of seconds to wait before rolling current file (0 = never roll based on time interval)
a1.sinks.hdfs-sink.hdfs.rollInterval = 0
# File size to trigger roll, in bytes (0: never roll based on file size)
a1.sinks.hdfs-sink.hdfs.rollSize = 204800000
a1.sinks.hdfs-sink.hdfs.rollCount = 0
# Timeout after which inactive files get closed (0 = disable automatic closing of idle files)
a1.sinks.hdfs-sink.hdfs.idleTimeout = 30

a1.channels.hdfs-channel.type = file
a1.channels.hdfs-channel.checkpointDir = ./checkpointDir
a1.channels.hdfs-channel.dataDirs = ./dataDir

# bind the source and sink to the channel
a1.sources.r1.channels = hdfs-channel
a1.sinks.hdfs-sink.channel = hdfs-channel
